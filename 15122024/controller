//AuthController.php
<?php

namespace App\Http\Controllers;

use App\Models\User;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Auth;

class AuthController extends Controller
{
    public function login(Request $request)
{
    // Validate the login request
    $credentials = $request->validate([
        'email' => 'required|email',
        'password' => 'required',
    ]);

    if (Auth::attempt($credentials)) {
        // Redirect the user to their profile page (dashboard) after successful login
        return redirect()->route('profile');
    }

    return back()->withErrors([
        'email' => 'The provided credentials do not match our records.',
    ]);
}


    public function loginPost(Request $request)
{
    $credentials = $request->only('email', 'password');
    $user = User::where('email', $request->email)->first();

    if ($user && Hash::check($request->password, $user->password)) {
        Auth::login($user);
        $request->session()->regenerate();
        return redirect()->route('profile')->with('success', 'Welcome back!');
    }

    return back()->with('error', 'Invalid credentials.');
}


    function register(){
        return view("auth.register");
    }

    public function registerPost(Request $request)
{
    // Validate the input
    $request->validate([
        'fullname' => 'required|string|max:255',
        'email' => 'required|email|unique:users,email',
        'password' => 'required|string|min:8|confirmed',
    ]);

    // Create the user
    $user = User::create([
        'name' => $request->fullname,
        'email' => $request->email,
        'password' => bcrypt($request->password),
    ]);

    // Automatically log the user in
    Auth::login($user);

    // Redirect to the profile page
    return redirect()->route('profile');
}

public function profile()
{
    $user = Auth::user(); 
    if (!$user) {
        return redirect()->route('login')->with('error', 'Please log in to access the profile page.');
    }
    return view('auth.profile', compact('user'));
}

public function editProfile()
{
    // Fetch the logged-in user
    $user = Auth::user();
    
    // Pass the user to the view
    return view('profile.edit', compact('user'));
}


}

//StudentController.php
<?php
namespace App\Http\Controllers;

use Illuminate\Http\Request;

class StudentController extends Controller
{
    public function index()
    {
        // Return the student dashboard view
        return view('student.dashboard'); // Adjust the view name accordingly
    }
}

//RegisterController.php
<?php
namespace App\Http\Controllers\Auth;

use App\Models\User;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Validator;

class RegisterController extends Controller
{
    public function showRegistrationForm()
    {
        return view('register');
    }

    public function register(Request $request)
{
    // Validation
    $request->validate([
        'name' => 'required|string|max:255',
        'email' => 'required|string|email|max:255|unique:users',
        'password' => 'required|string|min:8|confirmed',
        'role' => 'required|string|in:student,staff', // Ensure valid role input
    ]);

    // Create user
    $user = User::create([
        'name' => $request->name,
        'email' => $request->email,
        'password' => Hash::make($request->password),
        'role' => $request->role, // Set the role as per input
    ]);

    // Log in the user after registration
    Auth::login($user);

    // Redirect based on role (student or staff)
    return redirect()->route($request->role . '.dashboard'); // Dynamically routes to 'student.dashboard' or 'staff.dashboard'
}

}

//StaffController.php
<?php
namespace App\Http\Controllers;

use Illuminate\Http\Request;

class StaffController extends Controller
{
    public function index()
    {
        return view('staff.dashboard');  
    }
}

//ConsultationController.php
<?php
namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\Consultation;
use App\Models\User;
use Inertia\Inertia;

class ConsultationController extends Controller
{
    public function index()
    {
        $advisors = User::where('role', 'advisor')->get(); // Ensure 'role' exists in your users table
        return Inertia::render('Consultations/Index', [
            'advisors' => $advisors,
        ]);
    }

    public function store(Request $request)
    {
        $request->validate([
            'advisor_id' => 'required|exists:users,id',
        ]);

        Consultation::create([
            'advisor_id' => $request->advisor_id,
            'student_id' => auth()->id(),
            'scheduled_at' => now()->addDays(1), // Default scheduled time
            'status' => 'pending',
        ]);

        return redirect()->route('consultations.index')->with('success', 'Consultation scheduled successfully!');
    }
}
